#!/usr/bin/bash

#                                _|        _|  _|                  _|        _|
#     _|_|_|  _|  _|_|   _|_|_|  _|_|_|        _|_|_|      _|_|    _|    _|_|_|
#   _|    _|  _|_|     _|        _|    _|  _|  _|    _|  _|    _|  _|  _|    _|
#   _|    _|  _|       _|        _|    _|  _|  _|    _|  _|    _|  _|  _|    _|
#     _|_|_|  _|         _|_|_|  _|    _|  _|  _|_|_|      _|_|    _|    _|_|_|
#
#
#     by Andrea Giammarchi - @WebReflection - http://archibold.io/

installation() {
  local name=$1
  local RESET="\033[0m"
  local RED="\033[0;31m"
  local GREEN="\033[0;32m"
  local YELLOW="\033[1;33m"
  local BOLD="\033[1m"
  local AUR
  case $name in
    acroread)
      sudo pacman -S --needed --noconfirm pangox-compat
      downloadArchive 'acroread'
      cd ~/Downloads/acroread
      sed 's/pangox-compat/libcanberra/' <PKGBUILD >PKGBUILD.patched
      mv PKGBUILD.patched PKGBUILD
      makepkg -Asc --needed --noconfirm
      sudo pacman -U --needed --noconfirm acroread*.pkg.tar.xz
      removeArchive acroread
      ;;
    broadcom-wl-dkms)
      sudo pacman -Syu --needed linux-headers dkms
      sudo systemctl enable dkms.service
      commonProcedure 'broadcom-wl-dkms'
      ;;
    dropbox)
      sudo pacman -Syu --needed ufw-extras perl-file-mimeinfo
      commonProcedure 'dropbox'
      ;;
    google-chrome-dev)
      commonProcedure 'google-chrome-dev'
      ;;
    hal)
      commonProcedure 'hal-info'
      commonProcedure 'hal'
      sudo systemctl enable hal.service
      sudo systemctl start hal.service
      ;;
    iojs-bin)
      commonProcedure 'iojs-bin'
      ;;
    iojs)
      commonProcedure 'iojs'
      ;;
    spotify)
      commonProcedure 'libgcrypt15'
      commonProcedure 'spotify'
      ;;
    sublime-text-nightly)
      commonProcedure 'sublime-text-nightly'
      mkdir -p /home/$USER/.config/sublime-text-3/Packages
      if [ ! -d "/home/$USER/.config/sublime-text-3/Packages/Theme - Soda" ]; then
        cd /home/$USER/.config/sublime-text-3/Packages
        git clone https://github.com/buymeasoda/soda-theme/ "Theme - Soda"
      fi
      ;;
    *)
      if [ "$(sudo pacman -Ssq $name | grep $name)" = "" ]; then
        AUR=$(curl -s -I $(getAURPackageNameAsURL $name) | grep '404')
        if [ "$AUR" = "" ]; then
          echo -e "Found an ${YELLOW}unknown${RESET} AUR ${BOLD}${1}${RESET} package."
          read -n1 -r -p "Are you sure you would like to install it? [y/N]" AUR
          if [ "$AUR" = "Y" ]; then
            AUR="y"
          fi
          if [ "$AUR" = "y" ]; then
            commonProcedure $name
          fi
        else
          echo -e "${RED}[WARNING]${RESET} package ${BOLD}${1}${RESET} not found";
          exit 1
        fi
      else
        sudo pacman -S --needed --noconfirm $name
      fi
      ;;
  esac
}

getAURPackageNameAsURL() {
  local name=$1
  local type=${name:0:2}
  echo "https://aur.archlinux.org/packages/${type}/${name}/${name}.tar.gz"
}

downloadArchive() {
  local name=$1
  sudo pacman -S --needed --noconfirm base-devel git
  cd ~/Downloads
  curl -L -O $(getAURPackageNameAsURL $name)
  tar -xzf "${name}.tar.gz"
}

removeArchive() {
  local name=$1
  cd ~/Downloads
  rm -rf "${name}"
  rm "${name}.tar.gz"
}

commonProcedure() {
  local name=$1
  downloadArchive $name
  cd ~/Downloads
  cd "${name}"
  makepkg -Asc --needed --noconfirm
  sudo pacman -U --needed --noconfirm ${name}*.pkg.tar.xz
  removeArchive $name
}

archibold() {
  local RESET="\033[0m"
  local RED="\033[0;31m"
  local GREEN="\033[0;32m"
  local YELLOW="\033[1;33m"
  local BOLD="\033[1m"
  local AUR
  local WIDTH=$2
  local HEIGHT=$3
  case $1 in
    archibold)
      mkdir -p ~/Downloads
      sudo curl -s -o ~/Downloads/archibold http://archibold.io/sh/archibold
      sudo curl -s -o ~/Downloads/archibold http://archibold.io/sh/archibold
      sudo chmod +x ~/Downloads/archibold
      sudo mv ~/Downloads/archibold $0
      ;;
    update)
      sudo pacman -Sy
      ;;
    upgrade)
      $(archibold 'archibold')
      sudo pacman -Syu --noconfirm
      ;;
    clean)
      sudo pacman -Sc --noconfirm
      ;;
    resplash)
      cd ~/Downloads
      AUR=$(sudo pacman -Qs fbset)
      if [ "$AUR" = "" ]; then
        sudo pacman -S --needed --noconfirm fbset
      fi
      if [ "$WIDTH" = "" ]; then
        WIDTH=$(sudo fbset | grep 'mode ' | sed -e 's/mode "//' | sed -e 's/x.*//')
      fi
      if [ "$HEIGHT" = "" ]; then
        HEIGHT=$(sudo fbset | grep 'mode ' | sed -e 's/mode "[0-9]*x//' | sed -e 's/"//')
      fi
      if [ "$AUR" = "" ]; then
        sudo pacman -Rsc --noconfirm fbset
      fi
      AUR=$(sudo pacman -Qs inkscape)
      if [ "$AUR" = "" ]; then
        sudo pacman -S --needed --noconfirm inkscape
      fi
      curl -L -O http://archibold.io/img/archibold.svg
      inkscape \
        --export-png=archibold.png \
        --export-width=$WIDTH \
        --export-height=$HEIGHT \
        archibold.svg
      convert archibold.png -quality 100% archibold.jpg
      if [ -d "/boot/EFI/syslinux" ]; then
        echo "moving new ${WIDTH}x${HEIGHT} splash into /boot/EFI"
        sudo cp archibold.jpg /boot/EFI
      else
        echo "moving new ${WIDTH}x${HEIGHT} splash into /boot"
        sudo cp archibold.jpg /boot
      fi
      rm archibold.{jpg,png,svg}
      if [ "$AUR" = "" ]; then
        sudo pacman -Rsc --noconfirm inkscape
      fi
      ;;
    search)
      AUR=$(sudo pacman -Ssq $2 | grep $2)
      if [ "$AUR" != "" ]; then
        echo -e " ${GREEN}✔${RESET} Official ${BOLD}${2}${RESET} package available"
      else
        if [ "$(curl -s -I $(getAURPackageNameAsURL $2) | grep '404')" = "" ]; then
          echo -e " ${YELLOW}✓${RESET} ${BOLD}${2}${RESET} available via ${BOLD}AUR${RESET}"
        else
          AUR=$(sudo pacman -Ss $2)
          if [ "$AUR" = "" ]; then
            echo -e " ${RED}!${RESET} Unable to find ${BOLD}${2}${RESET} package."
          else
            echo "$AUR"
          fi
        fi
      fi
      ;;
    install)
      case $2 in
        ab-android)
          sudo pacman -S --needed --noconfirm jdk8-openjdk android-udev android-tools apache-ant
          # sudo pacman -S --needed --noconfirm gcc git gnupg flex bison gperf sdl wxgtk squashfs-tools curl ncurses zlib schedtool perl-switch zip unzip libxslt python2-virtualenv bc
          commonProcedure 'android-sdk'
          commonProcedure 'android-sdk-platform-tools'
          commonProcedure 'android-sdk-build-tools'
          commonProcedure 'android-platform'
          sudo groupadd sdkusers
          sudo gpasswd -a $USER sdkusers
          export ANDROID_HOME=/opt/android-sdk
          echo '
    # needed by PhoneGap
    ANDROID_HOME=/opt/android-sdk
    PATH="$PATH:$ANDROID_HOME/tools"'>>~/.bashrc
          sudo chown -R :sdkusers /opt/android-sdk/
          sudo chmod -R g+w /opt/android-sdk/
          echo '
    SUBSYSTEM=="usb", ATTR{idVendor}=="[VENDOR ID]", MODE="0666"
    SUBSYSTEM=="usb",ATTR{idVendor}=="[VENDOR ID]",ATTR{idProduct}=="[PRODUCT ID]",SYMLINK+="android_adb"
    SUBSYSTEM=="usb",ATTR{idVendor}=="[VENDOR ID]",ATTR{idProduct}=="[PRODUCT ID]",SYMLINK+="android_fastboot"
    '>>51-android.rules
          sudo mv 51-android.rules /etc/udev/rules.d/
          sudo udevadm control --reload-rules
          echo ''
          echo 'unplug and re-plug your device, if any'
          echo ''
          ;;
        ab-pad)
          sudo pacman -S --needed --noconfirm dosfstools usbmuxd gvfs-afc gvfs-afp gvfs-goa gvfs-gphoto2 gvfs-mtp gvfs-smb
          ;;
        ab-fs-extra)
          sudo pacman -S --needed --noconfirm exfat-utils fuse-exfat dosfstools
          ;;
        ab-git)
          if [ "$GIT_USER" != "" ]; then
            if [ "$GIT_USER" != "" ]; then
              git config --global user.name "$GIT_USER"
              git config --global user.email "$GIT_EMAIL"
              git config --global push.default simple
              sudo pacman -S --needed --noconfirm openssh xclip
              ssh-keygen -t rsa -C "$GIT_EMAIL"
              eval "$(ssh-agent -s)"
              ssh-add ~/.ssh/id_rsa
              echo '
              Time to add your key in GitHub.'
              read -n1 -r -p "Press any key to copy to clipboard" key
              cat ~/.ssh/id_rsa.pub | xclip -selection clipboard
            fi
          else
            echo 'Please specify a GIT_USER and a GIT_EMAIL'
            exit 1
          fi
          ;;
        ab-virtualbox)
          sudo pacman -S --needed --noconfirm virtualbox qt4
          echo 'vboxdrv
          vboxnetadp
          vboxnetflt
          vboxpci'>~/virtualbox.conf
          sudo mv ~/virtualbox.conf /etc/modules-load.d/virtualbox.conf
          sudo modprobe vboxdrv
          sudo modprobe vboxnetadp
          sudo modprobe vboxnetflt
          sudo modprobe vboxpci
          ;;
        ab-nodejs)
          sudo pacman -S --needed --noconfirm nodejs
          echo ''
          echo 'Please add your npm info (if any)'
          echo ''
          npm adduser
          ;;
        *)
          installation $2
          ;;
      esac
      ;;
    uninstall)
      archibold remove $2
      ;;
    remove)
      sudo pacman -Rsc $2
      ;;
    *)
      echo -e "
${BOLD} __________________
|                  |
| archibold v0.3.5 |
|__________________|${RESET}

 ${BOLD}usage${RESET}:

  archibold [clean|update|upgrade|resplash]
  archibold [install|remove|search] package-name

 ${BOLD}list of included AUR packages${RESET}:

  acroread                # Adobe Acrobat Reader
  broadcom-wl-dkms        # Broadcom wifi
  dropbox                 # Dropbox client
  google-chrome-dev       # Chrome dev channel
  hal                     # Flash DRM content for Google Play
  iojs-bin | iojs         # an updated community fork of nodejs
  spotify                 # music baby!
  sublime-text-nightly    # Sublime 3 (requires a valid license)

 ${BOLD}list of simplified installations${RESET}:

  ab-android              # android-sdk and development
  ab-fs-extra             # (ex)fat utilities
  ab-git                  # git + ssh key configuration
  ab-nodejs               # nodejs + npm configuration
  ab-pad                  # recognizes external devices
  ab-virtualbox           # virtualbox + configuration

"
      ;;
  esac
}

archibold "$@"